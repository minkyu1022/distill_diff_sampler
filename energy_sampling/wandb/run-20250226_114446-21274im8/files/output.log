GFN(
  (t_model): TimeEncodingPIS(
    (t_model): Sequential(
      (0): Linear(in_features=128, out_features=64, bias=True)
      (1): GELU(approximate='none')
      (2): Linear(in_features=64, out_features=64, bias=True)
    )
  )
  (s_model): StateEncodingPIS(
    (x_model): Linear(in_features=32, out_features=64, bias=True)
  )
  (joint_model): JointPolicyPIS(
    (model): Sequential(
      (0): GELU(approximate='none')
      (1): Sequential(
        (0): Linear(in_features=64, out_features=64, bias=True)
        (1): GELU(approximate='none')
      )
      (2): Sequential(
        (0): Linear(in_features=64, out_features=64, bias=True)
        (1): GELU(approximate='none')
      )
      (3): Linear(in_features=64, out_features=64, bias=True)
    )
  )
  (langevin_scaling_model): LangevinScalingModelPIS(
    (lgv_model): Sequential(
      (0): Linear(in_features=128, out_features=64, bias=True)
      (1): Sequential(
        (0): GELU(approximate='none')
        (1): Linear(in_features=64, out_features=64, bias=True)
      )
      (2): Sequential(
        (0): GELU(approximate='none')
        (1): Linear(in_features=64, out_features=64, bias=True)
      )
      (3): GELU(approximate='none')
      (4): Linear(in_features=64, out_features=1, bias=True)
    )
  )
)
  0%|                                                                       | 1/10001 [00:11<33:17:37, 11.99s/it]
Traceback (most recent call last):
  File "/home/minkyu/gfn-diffusion/energy_sampling/train.py", line 402, in <module>
    train()
  File "/home/minkyu/gfn-diffusion/energy_sampling/train.py", line 352, in train
    metrics['train/loss'] = train_step(energy, gfn_model, gfn_optimizer, i, args.exploratory,
  File "/home/minkyu/gfn-diffusion/energy_sampling/train.py", line 248, in train_step
    loss = bwd_train_step(energy, gfn_model, buffer, buffer_ls, exploration_std, it=it)
  File "/home/minkyu/gfn-diffusion/energy_sampling/train.py", line 285, in bwd_train_step
    loss = get_gfn_backward_loss(args.mode_bwd, samples, gfn_model, energy.log_reward,
  File "/home/minkyu/gfn-diffusion/energy_sampling/utils.py", line 101, in get_gfn_backward_loss
    return loss
UnboundLocalError: local variable 'loss' referenced before assignment
