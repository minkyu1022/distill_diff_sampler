GFN(
  (t_model): TimeEncodingPIS(
    (t_model): Sequential(
      (0): Linear(in_features=128, out_features=64, bias=True)
      (1): GELU(approximate='none')
      (2): Linear(in_features=64, out_features=64, bias=True)
    )
  )
  (s_model): StateEncodingPIS(
    (x_model): Linear(in_features=32, out_features=64, bias=True)
  )
  (joint_model): JointPolicyPIS(
    (model): Sequential(
      (0): GELU(approximate='none')
      (1): Sequential(
        (0): Linear(in_features=64, out_features=64, bias=True)
        (1): GELU(approximate='none')
      )
      (2): Sequential(
        (0): Linear(in_features=64, out_features=64, bias=True)
        (1): GELU(approximate='none')
      )
      (3): Linear(in_features=64, out_features=64, bias=True)
    )
  )
  (langevin_scaling_model): LangevinScalingModelPIS(
    (lgv_model): Sequential(
      (0): Linear(in_features=128, out_features=64, bias=True)
      (1): Sequential(
        (0): GELU(approximate='none')
        (1): Linear(in_features=64, out_features=64, bias=True)
      )
      (2): Sequential(
        (0): GELU(approximate='none')
        (1): Linear(in_features=64, out_features=64, bias=True)
      )
      (3): GELU(approximate='none')
      (4): Linear(in_features=64, out_features=1, bias=True)
    )
  )
)
100%|████████████████████████████████████████████████████████| 25001/25001 [2:24:28<00:00,  2.88it/s]
Traceback (most recent call last):
  File "/home/minkyu/gfn-diffusion/energy_sampling/train.py", line 339, in <module>
    for i in trange(args.epochs + 1):
  File "/home/minkyu/gfn-diffusion/energy_sampling/train.py", line 318, in train
    buffer_ls = ReplayBuffer(args.buffer_size, device, energy.log_reward, args.batch_size,
  File "/home/minkyu/gfn-diffusion/energy_sampling/train.py", line 327, in final_eval
    rank_weight=args.rank_weight, prioritized=args.prioritized)
  File "/home/minkyu/gfn-diffusion/energy_sampling/train.py", line 205, in eval_step
    samples, metrics['final_eval/log_Z'], metrics['final_eval/log_Z_lb'], metrics[
  File "/compuworks/anaconda3/envs/gfn_school/lib/python3.10/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/home/minkyu/gfn-diffusion/energy_sampling/evaluations.py", line 23, in mean_log_likelihood
    states, log_pfs, log_pbs, log_fs = gfn.get_trajectory_bwd(data, None, log_reward_fn)
  File "/home/minkyu/gfn-diffusion/energy_sampling/models/gfn.py", line 217, in get_trajectory_bwd
    s_ = mean.detach() + var.sqrt().detach() * torch.randn_like(s, device=self.device)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!
